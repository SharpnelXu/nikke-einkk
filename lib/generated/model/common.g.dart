// GENERATED CODE - DO NOT MODIFY BY HAND

part of '../../model/common.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

NikkeCharacterData _$NikkeCharacterDataFromJson(Map<String, dynamic> json) => NikkeCharacterData(
  id: (json['id'] as num?)?.toInt() ?? 0,
  nameLocalkey: json['name_localkey'] as String? ?? '',
  descriptionLocalkey: json['description_localkey'] as String? ?? '',
  resourceId: (json['resource_id'] as num?)?.toInt() ?? 0,
  additionalSkins: (json['additional_skins'] as List<dynamic>?)?.map((e) => e as String).toList() ?? const [],
  nameCode: (json['name_code'] as num?)?.toInt() ?? 0,
  order: (json['order'] as num?)?.toInt() ?? 0,
  rawOriginalRare: json['original_rare'] as String? ?? '',
  gradeCoreId: (json['grade_core_id'] as num?)?.toInt() ?? 0,
  growGrade: (json['grow_grade'] as num?)?.toInt() ?? 0,
  statEnhanceId: (json['stat_enhance_id'] as num?)?.toInt() ?? 0,
  rawCharacterClass: json['class'] as String? ?? '',
  elementId: (json['element_id'] as List<dynamic>?)?.map((e) => (e as num).toInt()).toList() ?? const [],
  criticalRatio: (json['critical_ratio'] as num?)?.toInt() ?? 0,
  criticalDamage: (json['critical_damage'] as num?)?.toInt() ?? 0,
  shotId: (json['shot_id'] as num?)?.toInt() ?? 0,
  bonusRangeMin: (json['bonusrange_min'] as num?)?.toInt() ?? 0,
  bonusRangeMax: (json['bonusrange_max'] as num?)?.toInt() ?? 0,
  rawUseBurstSkill: json['use_burst_skill'] as String? ?? '',
  rawChangeBurstStep: json['change_burst_step'] as String? ?? '',
  burstApplyDelay: (json['burst_apply_delay'] as num?)?.toInt() ?? 0,
  burstDuration: (json['burst_duration'] as num?)?.toInt() ?? 0,
  ultiSkillId: (json['ulti_skill_id'] as num?)?.toInt() ?? 0,
  skill1Id: (json['skill1_id'] as num?)?.toInt() ?? 0,
  rawSkill1Table: json['skill1_table'] as String? ?? '',
  skill2Id: (json['skill2_id'] as num?)?.toInt() ?? 0,
  rawSkill2Table: json['skill2_table'] as String? ?? '',
  effCategoryType: json['eff_category_type'] as String? ?? '',
  effCategoryValue: (json['eff_category_value'] as num?)?.toInt() ?? 0,
  categoryType1: json['category_type_1'] as String? ?? '',
  categoryType2: json['category_type_2'] as String? ?? '',
  categoryType3: json['category_type_3'] as String? ?? '',
  rawCorporation: json['corporation'] as String? ?? '',
  rawCorporationSubType: json['corporation_sub_type'] as String?,
  cvLocalkey: json['cv_localkey'] as String? ?? '',
  squad: json['squad'] as String? ?? '',
  pieceId: (json['piece_id'] as num?)?.toInt() ?? 0,
  isVisible: json['is_visible'] as bool? ?? false,
  prismIsActive: json['prism_is_active'] as bool? ?? false,
  isDetailClose: json['is_detail_close'] as bool? ?? false,
);

WeaponData _$WeaponDataFromJson(Map<String, dynamic> json) => WeaponData(
  id: (json['id'] as num?)?.toInt() ?? 0,
  nameLocalkey: json['name_localkey'] as String? ?? '',
  descriptionLocalkey: json['description_localkey'] as String? ?? '',
  cameraWork: json['camera_work'] as String? ?? '',
  rawWeaponType: json['weapon_type'] as String? ?? '',
  rawAttackType: json['attack_type'] as String? ?? '',
  counterEnemy: json['counter_enermy'] as String? ?? '',
  rawPreferTarget: json['prefer_target'] as String? ?? '',
  rawPreferTargetCondition: json['prefer_target_condition'] as String? ?? '',
  rawShotTiming: json['shot_timing'] as String? ?? '',
  rawFireType: json['fire_type'] as String? ?? '',
  rawInputType: json['input_type'] as String? ?? '',
  isTargeting: json['is_targeting'] as bool? ?? false,
  damage: (json['damage'] as num?)?.toInt() ?? 0,
  shotCount: (json['shot_count'] as num?)?.toInt() ?? 0,
  muzzleCount: (json['muzzle_count'] as num?)?.toInt() ?? 0,
  multiTargetCount: (json['multi_target_count'] as num?)?.toInt() ?? 0,
  centerShotCount: (json['center_shot_count'] as num?)?.toInt() ?? 0,
  maxAmmo: (json['max_ammo'] as num?)?.toInt() ?? 0,
  maintainFireStance: (json['maintain_fire_stance'] as num?)?.toInt() ?? 0,
  upTypeFireTiming: (json['uptype_fire_timing'] as num?)?.toInt() ?? 0,
  reloadTime: (json['reload_time'] as num?)?.toInt() ?? 0,
  reloadBullet: (json['reload_bullet'] as num?)?.toInt() ?? 0,
  reloadStartAmmo: (json['reload_start_ammo'] as num?)?.toInt() ?? 0,
  rateOfFireResetTime: (json['rate_of_fire_reset_time'] as num?)?.toInt() ?? 0,
  rateOfFire: (json['rate_of_fire'] as num?)?.toInt() ?? 0,
  endRateOfFire: (json['end_rate_of_fire'] as num?)?.toInt() ?? 0,
  rateOfFireChangePerShot: (json['rate_of_fire_change_pershot'] as num?)?.toInt() ?? 0,
  burstEnergyPerShot: (json['burst_energy_pershot'] as num?)?.toInt() ?? 0,
  targetBurstEnergyPerShot: (json['target_burst_energy_pershot'] as num?)?.toInt() ?? 0,
  spotFirstDelay: (json['spot_first_delay'] as num?)?.toInt() ?? 0,
  spotLastDelay: (json['spot_last_delay'] as num?)?.toInt() ?? 0,
  startAccuracyCircleScale: (json['start_accuracy_circle_scale'] as num?)?.toInt() ?? 0,
  endAccuracyCircleScale: (json['end_accuracy_circle_scale'] as num?)?.toInt() ?? 0,
  accuracyChangePerShot: (json['accuracy_change_pershot'] as num?)?.toInt() ?? 0,
  accuracyChangeSpeed: (json['accuracy_change_speed'] as num?)?.toInt() ?? 0,
  autoStartAccuracyCircleScale: (json['auto_start_accuracy_circle_scale'] as num?)?.toInt() ?? 0,
  autoEndAccuracyCircleScale: (json['auto_end_accuracy_circle_scale'] as num?)?.toInt() ?? 0,
  autoAccuracyChangePerShot: (json['auto_accuracy_change_pershot'] as num?)?.toInt() ?? 0,
  autoAccuracyChangeSpeed: (json['auto_accuracy_change_speed'] as num?)?.toInt() ?? 0,
  zoomRate: (json['zoom_rate'] as num?)?.toInt() ?? 0,
  multiAimRange: (json['multi_aim_range'] as num?)?.toInt() ?? 0,
  spotProjectileSpeed: (json['spot_projectile_speed'] as num?)?.toInt() ?? 0,
  chargeTime: (json['charge_time'] as num?)?.toInt() ?? 0,
  fullChargeDamage: (json['full_charge_damage'] as num?)?.toInt() ?? 0,
  fullChargeBurstEnergy: (json['full_charge_burst_energy'] as num?)?.toInt() ?? 0,
  spotRadiusObject: (json['spot_radius_object'] as num?)?.toInt() ?? 0,
  spotRadius: (json['spot_radius'] as num?)?.toInt() ?? 0,
  spotExplosionRange: (json['spot_explosion_range'] as num?)?.toInt() ?? 0,
  coreDamageRate: (json['core_damage_rate'] as num?)?.toInt() ?? 0,
  penetration: (json['penetration'] as num?)?.toInt() ?? 0,
  useFunctionIdList:
      (json['use_function_id_list'] as List<dynamic>?)?.map((e) => (e as num).toInt()).toList() ?? const [],
  hurtFunctionIdList:
      (json['hurt_function_id_list'] as List<dynamic>?)?.map((e) => (e as num).toInt()).toList() ?? const [],
  shakeId: (json['shake_id'] as num?)?.toInt() ?? 0,
  shakeType: json['ShakeType'] as String? ?? '',
  shakeWeight: (json['ShakeWeight'] as num?)?.toInt() ?? 0,
);

CharacterStatData _$CharacterStatDataFromJson(Map<String, dynamic> json) => CharacterStatData(
  id: (json['id'] as num?)?.toInt() ?? 0,
  group: (json['group'] as num?)?.toInt() ?? 0,
  level: (json['level'] as num?)?.toInt() ?? 0,
  hp: (json['level_hp'] as num?)?.toInt() ?? 0,
  attack: (json['level_attack'] as num?)?.toInt() ?? 0,
  defence: (json['level_defence'] as num?)?.toInt() ?? 0,
  energyResist: (json['level_energy_resist'] as num?)?.toInt() ?? 0,
  metalResist: (json['level_metal_resist'] as num?)?.toInt() ?? 0,
  bioResist: (json['level_bio_resist'] as num?)?.toInt() ?? 0,
);

CharacterStatEnhanceData _$CharacterStatEnhanceDataFromJson(Map<String, dynamic> json) => CharacterStatEnhanceData(
  id: (json['id'] as num?)?.toInt() ?? 0,
  gradeRatio: (json['grade_ratio'] as num?)?.toInt() ?? 0,
  gradeHp: (json['grade_hp'] as num?)?.toInt() ?? 0,
  gradeAttack: (json['grade_attack'] as num?)?.toInt() ?? 0,
  gradeDefence: (json['grade_defence'] as num?)?.toInt() ?? 0,
  gradeEnergyResist: (json['grade_energy_resist'] as num?)?.toInt() ?? 0,
  gradeMetalResist: (json['grade_metal_resist'] as num?)?.toInt() ?? 0,
  gradeBioResist: (json['grade_bio_resist'] as num?)?.toInt() ?? 0,
  coreHp: (json['core_hp'] as num?)?.toInt() ?? 0,
  coreAttack: (json['core_attack'] as num?)?.toInt() ?? 0,
  coreDefence: (json['core_defence'] as num?)?.toInt() ?? 0,
  coreEnergyResist: (json['core_energy_resist'] as num?)?.toInt() ?? 0,
  coreMetalResist: (json['core_metal_resist'] as num?)?.toInt() ?? 0,
  coreBioResist: (json['core_bio_resist'] as num?)?.toInt() ?? 0,
);

AttractiveStatData _$AttractiveStatDataFromJson(Map<String, dynamic> json) => AttractiveStatData(
  id: (json['id'] as num?)?.toInt() ?? 0,
  attractiveLevel: (json['attractive_level'] as num?)?.toInt() ?? 0,
  attractivePoint: (json['attractive_point'] as num?)?.toInt() ?? 0,
  attackerHpRate: (json['attacker_hp_rate'] as num?)?.toInt() ?? 0,
  attackerAttackRate: (json['attacker_attack_rate'] as num?)?.toInt() ?? 0,
  attackerDefenceRate: (json['attacker_defence_rate'] as num?)?.toInt() ?? 0,
  attackerEnergyResistRate: (json['attacker_energy_resist_rate'] as num?)?.toInt() ?? 0,
  attackerMetalResistRate: (json['attacker_metal_resist_rate'] as num?)?.toInt() ?? 0,
  attackerBioResistRate: (json['attacker_bio_resist_rate'] as num?)?.toInt() ?? 0,
  defenderHpRate: (json['defender_hp_rate'] as num?)?.toInt() ?? 0,
  defenderAttackRate: (json['defender_attack_rate'] as num?)?.toInt() ?? 0,
  defenderDefenceRate: (json['defender_defence_rate'] as num?)?.toInt() ?? 0,
  defenderEnergyResistRate: (json['defender_energy_resist_rate'] as num?)?.toInt() ?? 0,
  defenderMetalResistRate: (json['defender_metal_resist_rate'] as num?)?.toInt() ?? 0,
  defenderBioResistRate: (json['defender_bio_resist_rate'] as num?)?.toInt() ?? 0,
  supporterHpRate: (json['supporter_hp_rate'] as num?)?.toInt() ?? 0,
  supporterAttackRate: (json['supporter_attack_rate'] as num?)?.toInt() ?? 0,
  supporterDefenceRate: (json['supporter_defence_rate'] as num?)?.toInt() ?? 0,
  supporterEnergyResistRate: (json['supporter_energy_resist_rate'] as num?)?.toInt() ?? 0,
  supporterMetalResistRate: (json['supporter_metal_resist_rate'] as num?)?.toInt() ?? 0,
  supporterBioResistRate: (json['supporter_bio_resist_rate'] as num?)?.toInt() ?? 0,
);

CoverStatData _$CoverStatDataFromJson(Map<String, dynamic> json) => CoverStatData(
  id: (json['id'] as num?)?.toInt() ?? 0,
  lv: (json['lv'] as num?)?.toInt() ?? 0,
  levelHp: (json['level_hp'] as num?)?.toInt() ?? 0,
  levelDefence: (json['level_defence'] as num?)?.toInt() ?? 0,
);
